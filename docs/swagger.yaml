basePath: /api
definitions:
  api.Response:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  gin.H:
    additionalProperties: {}
    type: object
  request.CreateBeforeReturnOrder:
    properties:
      channelID:
        type: integer
      customerID:
        type: string
      items:
        items:
          $ref: '#/definitions/request.CreateBeforeReturnOrderItem'
        type: array
      logistic:
        type: string
      mkpStatus:
<<<<<<< HEAD
        type: integer
=======
        type: string
>>>>>>> rom-gin
      orderNo:
        type: string
      reason:
        type: string
      returnDate:
        type: string
      soNo:
        type: string
      soStatus:
<<<<<<< HEAD
        type: integer
      srNo:
=======
>>>>>>> rom-gin
        type: string
      trackingNo:
        type: string
      warehouseID:
        type: integer
    required:
    - channelID
    - customerID
    - logistic
    - orderNo
    - reason
    - returnDate
    - soNo
    - trackingNo
    - warehouseID
    type: object
  request.CreateBeforeReturnOrderItem:
    properties:
      alterSKU:
        type: string
      createBy:
        type: string
      itemName:
        type: string
      orderNo:
        type: string
      price:
        type: number
      qty:
        type: integer
      returnQty:
        type: integer
      sku:
        type: string
      trackingNo:
        type: string
    required:
    - createBy
    - itemName
    - orderNo
    - price
    - qty
    - returnQty
    - sku
    type: object
  request.LoginLark:
    properties:
      userID:
        example: DC65060
        type: string
      userName:
        example: eknarin.ler
        type: string
    type: object
  request.LoginWeb:
    properties:
      password:
        description: change password lastest in 17 January 2025
        example: EKna1234
        type: string
      userName:
        example: eknarin.ler
        type: string
    type: object
  response.BeforeReturnOrderItem:
    properties:
      alterSKU:
        type: string
      createBy:
        type: string
      createDate:
        type: string
      itemName:
        type: string
      orderNo:
        type: string
      price:
        type: number
      qty:
        type: integer
      returnQty:
        type: integer
      sku:
        type: string
      trackingNo:
        type: string
    type: object
  response.BeforeReturnOrderResponse:
    properties:
      cancelId:
        type: integer
      channelId:
        type: integer
      confirmBy:
        type: string
      confirmDate:
        type: string
      createBy:
        type: string
      createDate:
        type: string
      customerId:
        type: string
      isCNCreated:
        type: boolean
      isEdited:
        type: boolean
      items:
        items:
          $ref: '#/definitions/response.BeforeReturnOrderItem'
        type: array
      logistic:
        type: string
      mkpStatus:
        type: string
      orderNo:
        type: string
      reason:
        type: string
      returnDate:
        type: string
      soNo:
        type: string
      soStatus:
        type: string
      srNo:
        type: string
      statusConfId:
        type: integer
      statusReturnId:
        type: integer
      trackingNo:
        type: string
      updateBy:
        type: string
      updateDate:
        type: string
      warehouseId:
        type: integer
    type: object
  response.SearchOrderItem:
    properties:
      itemName:
        type: string
      price:
        type: number
      qty:
        type: integer
      sku:
        type: string
    type: object
  response.SearchOrderResponse:
    properties:
      createDate:
        type: string
      items:
        items:
          $ref: '#/definitions/response.SearchOrderItem'
        type: array
      orderNo:
        type: string
      salesStatus:
        type: string
      soNo:
        type: string
      statusMKP:
        type: string
    type: object
  response.UpdateOrderStatusResponse:
    properties:
      confirmBy:
        type: string
      confirmDate:
        type: string
      orderNo:
        type: string
      statusConfID:
        type: integer
      statusReturnID:
        type: integer
    type: object
  response.UpdateSrNoResponse:
    properties:
      orderNo:
        type: string
      srNo:
        type: string
      statusConfID:
        type: integer
      statusReturnID:
        type: integer
      updateBy:
        type: string
      updateDate:
        type: string
    type: object
  response.User:
    properties:
<<<<<<< HEAD
      ReturnOrderLine:
        items:
          $ref: '#/definitions/response.ReturnOrderLine'
        type: array
      axStatusId:
        example: 1
        type: integer
      channelId:
        example: 2
        type: integer
      createBy:
        type: string
      createDate:
        type: string
      description:
        example: ""
        type: string
      optStatusId:
        example: 1
        type: integer
      orderNo:
        example: ORD0001
        type: string
      platfId:
        example: 1
        type: integer
      platfStatusId:
        example: 1
        type: integer
      reason:
        type: string
      soNo:
        example: SO0001
        type: string
      srNo:
        example: SR0001
        type: string
      statusCheckId:
        example: 1
        type: integer
      trackingNo:
        example: 12345678TH
        type: string
    type: object
  response.DeleteReturnOrder:
    properties:
      orderNo:
        type: string
    type: object
  response.DraftHeadResponse:
    properties:
      orderLines:
        items:
          $ref: '#/definitions/response.DraftLineResponse'
        type: array
      orderNo:
        type: string
      soNo:
        type: string
      srNo:
        type: string
    type: object
  response.DraftLineResponse:
    properties:
      itemName:
        type: string
      price:
        type: number
      qty:
        type: integer
      sku:
        type: string
    type: object
  response.DraftTradeDetail:
    properties:
      channelId:
        example: 2
        type: integer
      createBy:
        type: string
      createDate:
        type: string
      orderNo:
        example: ORD0001
        type: string
      reason:
        type: string
      soNo:
        example: SO0001
        type: string
      srNo:
        example: SR0001
        type: string
      statusCheckId:
        example: 1
        type: integer
      trackingNo:
        example: 12345678TH
        type: string
    type: object
  response.ImageResponse:
    properties:
      filePath:
        type: string
      imageID:
        type: integer
    type: object
  response.ImportOrderLineResponse:
    properties:
      itemName:
        type: string
      orderNo:
        type: string
      price:
        type: number
      qty:
        type: integer
      sku:
        type: string
      trackingNo:
        type: string
    type: object
  response.ImportOrderResponse:
    properties:
      createDate:
        type: string
      orderLines:
        items:
          $ref: '#/definitions/response.ImportOrderLineResponse'
        type: array
      orderNo:
        type: string
      soNo:
        type: string
      trackingNo:
        type: string
    type: object
  response.ImportOrderSummary:
    properties:
      orderNo:
        type: string
      photo:
        type: string
      sku:
        type: string
    type: object
  response.ListDraftConfirmOrdersResponse:
    properties:
      channelId:
        type: integer
      createDate:
        type: string
      customerId:
        type: string
      logistic:
        type: string
      orderNo:
        type: string
      soNo:
        type: string
      srNo:
        type: string
      trackingNo:
        type: string
      warehouseId:
        type: integer
    type: object
  response.Login:
    properties:
      department:
        example: G07
=======
      departmentNo:
>>>>>>> rom-gin
        type: string
      fullNameTH:
        type: string
      nickName:
        type: string
      platform:
        type: string
      roleID:
        type: integer
      userID:
        type: string
      userName:
        type: string
    type: object
  response.UserRole:
    properties:
      departmentNo:
        type: string
      description:
        type: string
      fullNameTH:
        type: string
      nickName:
        type: string
      permission:
        type: string
      roleID:
        type: integer
      roleName:
        type: string
      userID:
        type: string
      userName:
        type: string
    type: object
info:
  contact: {}
  description: This is a Return Order Management Service API server.
  title: Return Order Management Service ‚≠ê
  version: "1.0"
paths:
  /auth:
    get:
      description: Validates if the JWT token is valid and retrieves user claims.
      responses:
        "200":
          description: Authenticated user details
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
      summary: Check Authentication
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user credentials and generates a JWT token.
      parameters:
      - description: User login credentials
        in: body
        name: login-request
        required: true
        schema:
          $ref: '#/definitions/request.LoginWeb'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            $ref: '#/definitions/response.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Login
      tags:
      - Authentication
  /auth/login-lark:
    post:
      consumes:
      - application/json
      description: Authenticates user credentials from Lark and generates a JWT token.
      parameters:
      - description: User login from Lark
        in: body
        name: login-request
        required: true
        schema:
          $ref: '#/definitions/request.LoginLark'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            $ref: '#/definitions/response.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Lark Login
      tags:
      - Authentication
  /auth/logout:
    post:
      description: Logs the user out by removing the JWT token from the cookie.
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Logout
      tags:
      - Authentication
  /order/create:
    post:
      consumes:
      - application/json
      description: Creates a new return order including order head and order lines
      operationId: create-return-order
      parameters:
      - description: Return Order Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateBeforeReturnOrder'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
<<<<<<< HEAD
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Create a new return order with lines
      tags:
      - Before Return Order
  /before-return-order/delete-line/{orderNo}/{sku}:
    delete:
      consumes:
      - application/json
      description: Delete an order line
      operationId: delete-BeforeReturnOrderLine
      parameters:
      - description: Order No
        in: path
        name: orderNo
        required: true
        type: string
      - description: SKU
        in: path
        name: sku
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Before ReturnOrderLine Deleted
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  type: string
              type: object
        "404":
          description: Order Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "422":
          description: Validation Error
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Delete Order line
      tags:
      - Before Return Order
  /before-return-order/get-orderbySO/{soNo}:
    get:
      consumes:
      - application/json
      description: Get details of an order by its SO number
      operationId: GetBySO-BefReturnOrder
      parameters:
      - description: soNo
        in: path
        name: soNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get by SO
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.OrderDetail'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: not found endpoint
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Before Return Order by SO
      tags:
      - Before Return Order
  /before-return-order/get-orders:
    get:
      consumes:
      - application/json
      description: Get all Before Return Order with pagination
      operationId: Get-BefReturnOrder-Paginated
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Get Paginated Orders
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.OrderDetail'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Paginated Before Return Order
      tags:
      - Before Return Order
  /before-return-order/line/{orderNo}:
    get:
      consumes:
      - application/json
      description: Retrieve the details of all return order lines by order number
      operationId: get-before-return-order-line-by-order-no
      parameters:
      - description: Order number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get return order lines by order number
      tags:
      - Before Return Order
  /before-return-order/list-lines:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all return order lines
      operationId: list-before-return-order-lines
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: List all return order lines
      tags:
      - Before Return Order
  /before-return-order/list-orders:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all before return orders
      operationId: list-before-return-orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: List all return orders
      tags:
      - Before Return Order
  /before-return-order/update/{orderNo}:
    patch:
      consumes:
      - application/json
      description: Update an existing return order with the provided details
      operationId: update-return-order-with-lines
      parameters:
      - description: Order number
        in: path
        name: orderNo
        required: true
        type: string
      - description: Before return order details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.BeforeReturnOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update an existing return order with lines
      tags:
      - Before Return Order
  /constants/get-district:
    get:
      consumes:
      - application/json
      description: Get all Thai District.
      operationId: get-district
      produces:
      - application/json
      responses:
        "200":
          description: District
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/entity.District'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: District not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Thai District
      tags:
      - Constants
  /constants/get-product:
    get:
      consumes:
      - application/json
      description: Get paginated products
      operationId: get-productAll-paginated
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: Limit per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Paginated Product List
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                ' total':
                  type: integer
                result:
                  items:
                    $ref: '#/definitions/entity.ROM_V_ProductAll'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get ProductAll with Pagination
      tags:
      - Constants
  /constants/get-province:
    get:
      consumes:
      - application/json
      description: Get all Thai Province.
      operationId: get-province
      produces:
      - application/json
      responses:
        "200":
          description: Province
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/entity.Province'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Thai Province
      tags:
      - Constants
  /constants/get-sub-district:
    get:
      consumes:
      - application/json
      description: Get all Thai SubDistrict.
      operationId: get-sub-district
      produces:
      - application/json
      responses:
        "200":
          description: SubDistrict
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/entity.SubDistrict'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: SubDistrict not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Thai SubDistrict
      tags:
      - Constants
  /constants/get-warehouse:
    get:
      consumes:
      - application/json
      description: Get Warehouse
      operationId: get-warehouse
      produces:
      - application/json
      responses:
        "200":
          description: Warehouse
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/entity.Warehouse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: SubDistrict not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Warehouse
      tags:
      - Constants
  /draft-confirm/code-r:
    post:
      consumes:
      - application/json
      description: Add a new CodeR entry
      operationId: add-code-r
      parameters:
      - description: CodeR details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CodeR'
      produces:
      - application/json
      responses:
        "201":
          description: CodeR added successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.DraftLineResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Add CodeR
      tags:
      - Draft & Confirm
  /draft-confirm/code-r/{orderNo}/{sku}:
    delete:
      consumes:
      - application/json
      description: Delete a CodeR entry by SKU and OrderNo
      operationId: delete-code-r
      parameters:
      - description: Order number
        in: path
        name: orderNo
        required: true
        type: string
      - description: SKU
        in: path
        name: sku
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: CodeR deleted successfully
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Delete CodeR
      tags:
      - Draft & Confirm
  /draft-confirm/detail/{orderNo}:
    get:
      consumes:
      - application/json
      description: Retrieve the details of a specific draft order by its order number
      operationId: get-draft-order-by-order-no
      parameters:
      - description: Order number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Draft order retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.DraftHeadResponse'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get draft order by order number
      tags:
      - Draft & Confirm
  /draft-confirm/list-code-r:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all codeR
      operationId: list-code-r
      produces:
      - application/json
      responses:
        "200":
          description: CodeR retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.CodeRResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: List all CodeR
      tags:
      - Draft & Confirm
  /draft-confirm/list-confirms:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all confirm orders
      operationId: list-confirm-orders
      produces:
      - application/json
      responses:
        "200":
          description: All Confirm orders retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ListDraftConfirmOrdersResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Confirm orders not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: List all confirm orders
      tags:
      - Draft & Confirm
  /draft-confirm/list-drafts:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all draft orders
      operationId: list-draft-orders
      produces:
      - application/json
      responses:
        "200":
          description: All Draft orders retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ListDraftConfirmOrdersResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Draft orders not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: List all draft orders
      tags:
      - Draft & Confirm
  /draft-confirm/update-draft/{orderNo}:
    patch:
      consumes:
      - application/json
      description: Update draft orders and change status to Confirm and Booking
      operationId: update-draft-orders
      parameters:
      - description: Order number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Draft orders updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.DraftHeadResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update draft orders
      tags:
      - Draft & Confirm
  /import-order/confirm-receipt/{identifier}:
    post:
      consumes:
      - application/json
      description: Confirm a trade return order based on the provided identifier (OrderNo
        or TrackingNo) and input lines for ReturnOrderLine.
      operationId: confirm-trade-return
      parameters:
      - description: OrderNo or TrackingNo
        in: path
        name: identifier
        required: true
        type: string
      - description: Trade return request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ConfirmTradeReturnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Trade return order confirmed successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  $ref: '#/definitions/response.ConfirmReceipt'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Confirm Receipt from Ware House
      tags:
      - Import Order
  /import-order/create-confirm-wh:
    post:
      consumes:
      - multipart/form-data
      description: Upload multiple images and data for a specific SoNo
      operationId: Import-Order
      parameters:
      - description: Sale Order Number
        in: formData
        name: soNo
        required: true
        type: string
      - description: Type of the image (1, 2, or 3)
        in: formData
        name: imageTypeID
        required: true
        type: integer
      - description: SKU (Optional)
        in: formData
        name: skus
        type: string
      - description: Files to upload
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successful
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  $ref: '#/definitions/response.ImageResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Import order
      tags:
      - Import Order
  /import-order/search:
    get:
      consumes:
      - application/json
      description: Retrieve the details of an order by its OrderNo or TrackingNo
      operationId: search-orderNo-or-trackingNo
      parameters:
      - description: OrderNo or TrackingNo
        in: query
        name: search
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  $ref: '#/definitions/response.ImportOrderResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: OrderNo or TrackingNo not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Search order by OrderNo or TrackingNo
      tags:
      - Import Order
  /import-order/summary/{orderNo}:
    get:
      consumes:
      - application/json
      description: Retrieve the details of Receipt
      operationId: GetSummary-ImportOrder
      parameters:
      - description: Order No
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get All
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.ImportOrderSummary'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found Endpoint
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Sum detail of Import Order
      tags:
      - Import Order
  /import-order/upload-photo:
    post:
      consumes:
      - multipart/form-data
      description: Upload a photo for a return order
      operationId: upload-photo
      parameters:
      - description: Order No
        in: formData
        name: orderNo
        required: true
        type: string
      - description: ImageTypeID (1, 2, 3)
        in: formData
        name: imageTypeID
        required: true
        type: string
      - description: SKU (required if imageTypeID is '3')
        in: formData
        name: sku
        type: string
      - description: Photo file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Upload Photo
      tags:
      - Import Order
  /import-order/validate-sku/{orderNo}/{sku}:
    post:
      consumes:
      - application/json
      description: Validate SKU
      operationId: validate-sku
      parameters:
      - description: Order No
        in: path
        name: orderNo
        required: true
        type: string
      - description: SKU
        in: path
        name: sku
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Validate SKU
      tags:
      - Import Order
  /return-order/create:
    post:
      consumes:
      - application/json
      description: Create a new return order
      operationId: Create-ReturnOrder
      parameters:
      - description: Return Order
        in: body
        name: CreateReturnOrder
        required: true
        schema:
          $ref: '#/definitions/request.CreateReturnOrder'
      produces:
      - application/json
      responses:
        "200":
          description: Return Order Created
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.CreateReturnOrder'
                  type: array
              type: object
        "201":
          description: Return Order Created
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.CreateReturnOrder'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Create Return Order
      tags:
      - Return Order
  /return-order/delete/{orderNo}:
    delete:
      consumes:
      - application/json
      description: Delete an order
      operationId: delete-ReturnOrder
      parameters:
      - description: Order No
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ReturnOrder Deleted
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.DeleteReturnOrder'
                  type: array
              type: object
        "204":
          description: No Content, Order Delete Successfully
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Order Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Delete Order
      tags:
      - Return Order
  /return-order/get-all:
    get:
      consumes:
      - application/json
      description: Retrieve the details of Return Order
      operationId: GetAll-ReturnOrder
      produces:
      - application/json
      responses:
        "200":
          description: Get All
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.ReturnOrder'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found Endpoint
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Return Order
      tags:
      - Return Order
  /return-order/get-all/{orderNo}:
    get:
      consumes:
      - application/json
      description: Get details return order by order no
      operationId: GetAllByOrderNo-ReturnOrder
      parameters:
      - description: Order No
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get All by OrderNo
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.ReturnOrder'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found Endpoint
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Return Order by OrderNo
      tags:
      - Return Order
  /return-order/get-lines:
    get:
      consumes:
      - application/json
      description: Get all Return Order Line
      operationId: GetAllLines-ReturnOrderLine
      produces:
      - application/json
      responses:
        "200":
          description: Get Return Order Lines
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.ReturnOrderLine'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found Endpoint
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Return Order Line
      tags:
      - Return Order
  /return-order/get-lines/{orderNo}:
    get:
      consumes:
      - application/json
      description: Get details of an order line by its order no
      operationId: GetLineByOrderNo-ReturnOrder
      parameters:
      - description: Order No
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get Lines by OrderNo
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.ReturnOrderLine'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found Endpoint
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Return Order Line by OrderNo
      tags:
      - Return Order
  /return-order/update/{orderNo}:
    patch:
      consumes:
      - application/json
      description: Update an existing return order using orderNo in the path
      operationId: Update-ReturnOrder
      parameters:
      - description: Order No
        in: path
        name: orderNo
        required: true
        type: string
      - description: Updated Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/request.UpdateReturnOrder'
      produces:
      - application/json
      responses:
        "200":
          description: Return Order Update
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.UpdateReturnOrder'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Order Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update Return Order
      tags:
      - Return Order
  /sale-return/cancel/{orderNo}:
    post:
      consumes:
      - application/json
      description: Cancel a sale return order based on the provided details
      operationId: cancel-sale-return
      parameters:
      - description: Order number
        in: path
        name: orderNo
        required: true
        type: string
      - description: Cancel Sale Return
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CancelSaleReturn'
      produces:
      - application/json
      responses:
        "200":
          description: Sale return order canceled successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.CancelSaleReturnResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Cancel a sale return order
      tags:
      - Sale Return
  /sale-return/confirm/{orderNo}:
    post:
      consumes:
      - application/json
      description: Confirm a sale return order based on the provided details
      operationId: confirm-sale-return
      parameters:
      - description: Order number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sale return order confirmed successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ConfirmSaleReturnResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Confirm a sale return order
      tags:
      - Sale Return
  /sale-return/create:
    post:
      consumes:
      - application/json
      description: Create a new sale return order based on the provided details
      operationId: create-sale-return
      parameters:
      - description: Sale Return Order
        in: body
        name: saleReturn
        required: true
        schema:
          $ref: '#/definitions/request.BeforeReturnOrder'
      produces:
      - application/json
      responses:
        "200":
          description: Sale return order created successfully
          schema:
=======
>>>>>>> rom-gin
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.BeforeReturnOrderResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Create a new return order
      tags:
      - Return Order MKP
  /order/mark-edited/{orderNo}:
    patch:
      consumes:
      - application/json
      description: Marks the order as edited when there are modifications
      operationId: mark-order-as-edited
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Mark order as edited
      tags:
      - Return Order MKP
  /order/search:
    get:
      consumes:
      - application/json
      description: Retrieve the details of an order by its SO number or Order number
      operationId: search-order
      parameters:
      - description: SO number
        in: query
        name: soNo
        type: string
      - description: Order number
        in: query
        name: orderNo
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SearchOrderResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Search order by SO number or Order number
      tags:
      - Return Order MKP
  /order/update-sr/{orderNo}:
    post:
      consumes:
      - application/json
      description: Generates SrNo and updates it in the database
      operationId: update-sr-no
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UpdateSrNoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update SrNo (Sale Return Number)
      tags:
      - Return Order MKP
  /order/update-status/{orderNo}:
    post:
      consumes:
      - application/json
      description: Updates order status based on RoleID (Accounting/Warehouse)
      operationId: update-order-status
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UpdateOrderStatusResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update order status for return confirmation
      tags:
      - Return Order MKP
  /user/{username}:
    get:
      description: Get user credentials by userName
      parameters:
      - description: UserName
        in: path
<<<<<<< HEAD
        name: orderNo
        required: true
        type: string
      - description: Trade Return Line Details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.TradeReturnLine'
      produces:
      - application/json
      responses:
        "201":
          description: Trade return line created successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  $ref: '#/definitions/response.BeforeReturnOrderLineResponse'
              type: object
        "400":
          description: Bad Request - Invalid input or missing required fields
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found - Order not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Add a new trade return line to an existing order
      tags:
      - Trade Return
  /trade-return/confirm-return/{orderNo}:
    patch:
      consumes:
      - application/json
      description: Confirm a trade return order based on the provided order number
        (OrderNo) and input lines for ReturnOrderLine.
      operationId: confirm-to-return
      parameters:
      - description: OrderNo
        in: path
        name: orderNo
        required: true
        type: string
      - description: Updated trade return request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ConfirmToReturnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Trade return order confirmed successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  $ref: '#/definitions/response.ConfirmToReturnOrder'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Confirm Return Order to Success
      tags:
      - Trade Return
  /trade-return/create-trade:
    post:
      consumes:
      - application/json
      description: Create a new trade return order with multiple order lines
      operationId: create-trade-return
      parameters:
      - description: Trade Return Detail
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.BeforeReturnOrder'
      produces:
      - application/json
      responses:
        "201":
          description: Trade return created successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  $ref: '#/definitions/response.BeforeReturnOrderResponse'
              type: object
        "400":
          description: Bad Request - Invalid input or missing required fields
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found - Order not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Create a new trade return order
      tags:
      - Trade Return
  /trade-return/get-confirm:
    get:
      consumes:
      - application/json
      description: Retrieve Return Orders with StatusCheckID = 2 (Confirmed)
      operationId: Get-Confirm-ReturnOrder
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.DraftTradeDetail'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Return Orders with StatusCheckID = 2
      tags:
      - Trade Return
  /trade-return/get-waiting:
    get:
      consumes:
      - application/json
      description: Retrieve Return Orders with StatusCheckID = 1 (Waiting)
      operationId: Get-Waiting-ReturnOrder
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.DraftTradeDetail'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Return Orders with StatusCheckID = 1
      tags:
      - Trade Return
  /trade-return/search-confirm:
    get:
      consumes:
      - application/json
      description: Retrieve Return Orders with StatusCheckID = 2 (Confirmed) within
        a specific date range
      operationId: Search-Confirm-ReturnOrder
      parameters:
      - description: Start Date (YYYY-MM-DD)
        in: query
        name: startDate
        required: true
        type: string
      - description: End Date (YYYY-MM-DD)
        in: query
        name: endDate
=======
        name: username
>>>>>>> rom-gin
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User credentials
          schema:
<<<<<<< HEAD
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.DraftTradeDetail'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Search Return Orders with StatusCheckID = 2 by Date Range
      tags:
      - Trade Return
  /trade-return/search-waiting:
    get:
      consumes:
      - application/json
      description: Retrieve Return Orders with StatusCheckID = 1 (Waiting) within
        a specific date range
      operationId: Search-Waiting-ReturnOrder
      parameters:
      - description: Start Date (YYYY-MM-DD)
        in: query
        name: startDate
        required: true
        type: string
      - description: End Date (YYYY-MM-DD)
        in: query
        name: endDate
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/response.DraftTradeDetail'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Search Return Orders with StatusCheckID = 1 by Date Range
      tags:
      - Trade Return
  /user/get-user:
    post:
      consumes:
      - application/json
      description: Retrieve the details of a user by their userid and username
      operationId: get-user
      parameters:
      - description: User login credentials in JSON format
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/request.LoginLark'
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.Login'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
=======
            $ref: '#/definitions/response.UserRole'
>>>>>>> rom-gin
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get User Credentials
      tags:
      - User
swagger: "2.0"
