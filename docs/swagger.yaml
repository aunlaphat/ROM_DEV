basePath: /api
definitions:
  api.Response:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  request.AddItem:
    properties:
      itemName:
        type: string
      orderNo:
        type: string
      price:
        type: number
      qty:
        type: integer
      returnQTY:
        type: integer
      sku:
        type: string
    type: object
  request.AddUserRequest:
    properties:
      roleID:
        description: รหัส Role
        type: integer
      userID:
        description: รหัสผู้ใช้
        type: string
      warehouseID:
        description: คลังสินค้า
        type: string
    required:
    - roleID
    - userID
    - warehouseID
    type: object
  request.CancelOrder:
    properties:
      cancelReason:
        type: string
      refID:
        type: string
      sourceTable:
        type: string
    type: object
  request.CreateBeforeReturnOrder:
    properties:
      channelID:
        type: integer
      customerID:
        type: string
      items:
        items:
          $ref: '#/definitions/request.CreateBeforeReturnOrderItem'
        type: array
      logistic:
        type: string
      mkpStatus:
        type: string
      orderNo:
        type: string
      reason:
        type: string
      returnDate:
        type: string
      soNo:
        type: string
      soStatus:
        type: string
      trackingNo:
        type: string
      warehouseID:
        type: integer
    required:
    - channelID
    - customerID
    - logistic
    - orderNo
    - reason
    - returnDate
    - soNo
    - trackingNo
    - warehouseID
    type: object
  request.CreateBeforeReturnOrderItem:
    properties:
      alterSKU:
        type: string
      createBy:
        type: string
      itemName:
        type: string
      orderNo:
        type: string
      price:
        type: number
      qty:
        type: integer
      returnQty:
        type: integer
      sku:
        type: string
      trackingNo:
        type: string
    required:
    - createBy
    - itemName
    - orderNo
    - price
    - qty
    - returnQty
    - sku
    type: object
  request.EditUserRequest:
    properties:
      roleID:
        description: รหัส Role ใหม่
        type: integer
      userID:
        description: รหัสผู้ใช้ที่ต้องการแก้ไข
        type: string
      warehouseID:
        description: คลังสินค้าใหม่
        type: string
    required:
    - userID
    type: object
  request.LoginLark:
    properties:
      userID:
        example: DC65060
        type: string
      userName:
        example: eknarin.ler
        type: string
    type: object
  request.LoginWeb:
    properties:
      password:
        description: change password lastest in 17 January 2025
        example: EKna1234
        type: string
      userName:
        example: eknarin.ler
        type: string
    type: object
  response.AddItemResponse:
    properties:
      createBy:
        type: string
      createDate:
        type: string
      itemName:
        type: string
      orderNo:
        type: string
      price:
        type: number
      qty:
        type: integer
      returnQty:
        type: integer
      sku:
        type: string
    type: object
  response.AddUserResponse:
    properties:
      createdBy:
        description: ผู้สร้าง
        type: string
      roleID:
        description: รหัส Role ที่เพิ่มให้
        type: integer
      userID:
        description: รหัสพนักงานที่เพิ่ม
        type: string
      warehouseID:
        description: รหัสคลังสินค้า
        type: string
    type: object
  response.BeforeReturnOrderItem:
    properties:
      alterSKU:
        type: string
      createBy:
        type: string
      createDate:
        type: string
      itemName:
        type: string
      orderNo:
        type: string
      price:
        type: number
      qty:
        type: integer
      returnQty:
        type: integer
      sku:
        type: string
      trackingNo:
        type: string
    type: object
  response.BeforeReturnOrderResponse:
    properties:
      cancelId:
        type: integer
      channelId:
        type: integer
      confirmBy:
        type: string
      confirmDate:
        type: string
      createBy:
        type: string
      createDate:
        type: string
      customerId:
        type: string
      isCNCreated:
        type: boolean
      isEdited:
        type: boolean
      items:
        items:
          $ref: '#/definitions/response.BeforeReturnOrderItem'
        type: array
      logistic:
        type: string
      mkpStatus:
        type: string
      orderNo:
        type: string
      reason:
        type: string
      returnDate:
        type: string
      soNo:
        type: string
      soStatus:
        type: string
      srNo:
        type: string
      statusConfId:
        type: integer
      statusReturnId:
        type: integer
      trackingNo:
        type: string
      updateBy:
        type: string
      updateDate:
        type: string
      warehouseId:
        type: integer
    type: object
  response.CancelOrderResponse:
    properties:
      cancelBy:
        type: string
      cancelDate:
        type: string
      cancelReason:
        type: string
      refID:
        type: string
      sourceTable:
        type: string
    type: object
  response.DraftConfirmItem:
    properties:
      itemName:
        type: string
      orderNo:
        type: string
      price:
        type: number
      qty:
        type: integer
      sku:
        type: string
    type: object
  response.DraftConfirmResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/response.DraftConfirmItem'
        type: array
      orderNo:
        type: string
      soNo:
        type: string
      srNo:
        type: string
    type: object
  response.EditUserResponse:
    properties:
      roleID:
        description: Role ID เดิม
        type: integer
      roleName:
        description: ชื่อ Role เดิม
        type: string
      updatedAt:
        description: เวลาที่อัปเดตล่าสุด
        type: string
      updatedBy:
        description: ผู้ที่ทำการแก้ไข
        type: string
      userID:
        description: รหัสพนักงานที่แก้ไข
        type: string
      warehouseID:
        description: รหัสคลังสินค้าเดิม
        type: integer
      warehouseName:
        description: ชื่อคลังสินค้าเดิม
        type: string
    type: object
  response.ListCodeRResponse:
    properties:
      nameAlias:
        type: string
      sku:
        type: string
    type: object
  response.Login:
    properties:
      departmentNo:
        type: string
      fullNameTH:
        type: string
      nickName:
        type: string
      platform:
        type: string
      roleID:
        type: integer
      roleName:
        type: string
      userID:
        type: string
      userName:
        type: string
    type: object
  response.OrderHeadResponse:
    properties:
      channelId:
        type: integer
      createDate:
        type: string
      customerId:
        type: string
      logistic:
        type: string
      orderNo:
        type: string
      soNo:
        type: string
      srNo:
        type: string
      trackingNo:
        type: string
      warehouseId:
        type: integer
    type: object
  response.SearchOrderItem:
    properties:
      itemName:
        type: string
      price:
        type: number
      qty:
        type: integer
      sku:
        type: string
    type: object
  response.SearchOrderResponse:
    properties:
      createDate:
        type: string
      items:
        items:
          $ref: '#/definitions/response.SearchOrderItem'
        type: array
      orderNo:
        type: string
      salesStatus:
        type: string
      soNo:
        type: string
      statusMKP:
        type: string
    type: object
  response.UpdateOrderStatusResponse:
    properties:
      confirmBy:
        type: string
      confirmDate:
        type: string
      orderNo:
        type: string
      statusConfID:
        type: integer
      statusReturnID:
        type: integer
    type: object
  response.UpdateSrNoResponse:
    properties:
      orderNo:
        type: string
      srNo:
        type: string
      statusConfID:
        type: integer
      statusReturnID:
        type: integer
      updateBy:
        type: string
      updateDate:
        type: string
    type: object
  response.UserResponse:
    properties:
      createdAt:
        description: เวลาสร้างบัญชี
        type: string
      departmentNo:
        description: รหัสแผนก
        type: string
      description:
        description: คำอธิบาย Role
        type: string
      fullNameTH:
        description: ชื่อเต็มภาษาไทย
        type: string
      isActive:
        description: สถานะบัญชี (Active/Inactive)
        type: boolean
      lastLoginAt:
        description: เวลาล็อกอินล่าสุด (optional)
        type: string
      nickName:
        description: ชื่อเล่น
        type: string
      roleID:
        description: รหัสบทบาท
        type: integer
      roleName:
        description: ชื่อบทบาท
        type: string
      updatedAt:
        description: เวลาล่าสุดที่มีการอัปเดต (optional)
        type: string
      userID:
        description: รหัสพนักงาน
        type: string
      userName:
        description: ชื่อผู้ใช้
        type: string
      warehouseID:
        description: รหัสคลังสินค้า
        type: integer
      warehouseName:
        description: ชื่อคลังสินค้า
        type: string
    type: object
info:
  contact: {}
  description: This is a Return Order Management Service API server.
  title: Return Order Management Service ⭐
  version: "1.0"
paths:
  /auth:
    get:
      description: Validates if the JWT token is valid and retrieves user claims.
      responses:
        "200":
          description: Authenticated user details
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
      summary: Check Authentication
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user credentials and generates a JWT token.
      parameters:
      - description: User login credentials
        in: body
        name: login-request
        required: true
        schema:
          $ref: '#/definitions/request.LoginWeb'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            $ref: '#/definitions/response.Login'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Login
      tags:
      - Authentication
  /auth/login-lark:
    post:
      consumes:
      - application/json
      description: Authenticates user credentials from Lark and generates a JWT token.
      parameters:
      - description: User login from Lark
        in: body
        name: login-request
        required: true
        schema:
          $ref: '#/definitions/request.LoginLark'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            $ref: '#/definitions/response.Login'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Lark Login
      tags:
      - Authentication
  /auth/logout:
    post:
      description: Logs the user out by removing the JWT token from the cookie.
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Logout
      tags:
      - Authentication
  /draft-confirm/add-item/{orderNo}:
    post:
      consumes:
      - application/json
      description: Adds an item to an existing draft order
      operationId: add-item-to-draft
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      - description: Item Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.AddItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.AddItemResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
      summary: Add Item to Draft Order
      tags:
      - Draft & Confirm MKP
  /draft-confirm/list-codeR:
    get:
      consumes:
      - application/json
      description: Retrieves a list of CodeR (SKU starting with 'R')
      operationId: get-list-codeR
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ListCodeRResponse'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get List of CodeR
      tags:
      - Draft & Confirm MKP
  /draft-confirm/order/details:
    get:
      consumes:
      - application/json
      description: Retrieves details of an order including items
      operationId: get-order-with-items
      parameters:
      - description: StatusConfID (1 = Draft, 2 = Confirm)
        in: query
        name: statusConfID
        required: true
        type: integer
      - description: Order Number
        in: query
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.DraftConfirmResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Order Details with Items
      tags:
      - Draft & Confirm MKP
  /draft-confirm/orders:
    get:
      consumes:
      - application/json
      description: Retrieves all orders filtered by StatusConfID and Date Range
      operationId: get-orders
      parameters:
      - description: StatusConfID (1 = Draft, 2 = Confirm)
        in: query
        name: statusConfID
        required: true
        type: integer
      - description: Start Date (YYYY-MM-DD)
        in: query
        name: startDate
        type: string
      - description: End Date (YYYY-MM-DD)
        in: query
        name: endDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.OrderHeadResponse'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Draft or Confirm Orders
      tags:
      - Draft & Confirm MKP
  /draft-confirm/remove-item/{orderNo}/{sku}:
    delete:
      consumes:
      - application/json
      description: Removes an item from a draft order
      operationId: remove-item-from-draft
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      - description: SKU
        in: path
        name: sku
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
      summary: Remove Item from Draft Order
      tags:
      - Draft & Confirm MKP
  /draft-confirm/update-status/{orderNo}:
    patch:
      consumes:
      - application/json
      description: Updates a draft order to confirm status
      operationId: confirm-draft-order
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UpdateOrderStatusResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Confirm Draft Order
      tags:
      - Draft & Confirm MKP
  /manage-users:
    get:
      consumes:
      - application/json
      description: Retrieve user data filtered by isActive, with pagination
      parameters:
      - description: Filter by Active Status (true/false)
        in: query
        name: isActive
        type: boolean
      - description: Limit (default 100)
        in: query
        name: limit
        type: integer
      - description: Offset (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.UserResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get list of users
      tags:
      - User Management
  /manage-users/{userID}:
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get user details
      tags:
      - User Management
  /manage-users/add:
    post:
      consumes:
      - application/json
      description: Add a user with role assignment
      parameters:
      - description: User details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.AddUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.AddUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
      summary: Add a new user
      tags:
      - User Management
  /manage-users/delete/{userID}:
    delete:
      consumes:
      - application/json
      description: Remove user from the system but keep data in the database
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
      summary: Delete a user (Soft Delete)
      tags:
      - User Management
  /manage-users/edit/{userID}:
    patch:
      consumes:
      - application/json
      description: Update role and warehouse of a user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Updated user details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.EditUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.EditUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
      summary: Edit user details
      tags:
      - User Management
  /order/cancel:
    post:
      consumes:
      - application/json
      description: Cancels an order by updating its status and recording the cancellation
        reason
      operationId: cancel-order
      parameters:
      - description: Cancel Order Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CancelOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.CancelOrderResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Cancel an existing return order
      tags:
      - Return Order MKP
  /order/create:
    post:
      consumes:
      - application/json
      description: Creates a new return order including order head and order lines
      operationId: create-return-order
      parameters:
      - description: Return Order Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateBeforeReturnOrder'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.BeforeReturnOrderResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Create a new return order
      tags:
      - Return Order MKP
  /order/generate-sr/{orderNo}:
    post:
      consumes:
      - application/json
      description: Calls AX API to generate a new SrNo for the order
      operationId: generate-sr-no-from-ax
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Generate SrNo from AX system
      tags:
      - Return Order MKP
  /order/mark-edited/{orderNo}:
    patch:
      consumes:
      - application/json
      description: Marks the order as edited when there are modifications
      operationId: mark-order-as-edited
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Mark order as edited
      tags:
      - Return Order MKP
  /order/search:
    get:
      consumes:
      - application/json
      description: Retrieve the details of an order by its SO number or Order number
      operationId: search-order
      parameters:
      - description: SO number
        in: query
        name: soNo
        type: string
      - description: Order number
        in: query
        name: orderNo
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SearchOrderResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Search order by SO number or Order number
      tags:
      - Return Order MKP
  /order/update-sr/{orderNo}:
    post:
      consumes:
      - application/json
      description: Generates SrNo and updates it in the database
      operationId: update-sr-no
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UpdateSrNoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update SrNo (Sale Return Number)
      tags:
      - Return Order MKP
  /order/update-status/{orderNo}:
    post:
      consumes:
      - application/json
      description: Updates order status based on RoleID (Accounting/Warehouse)
      operationId: update-order-status
      parameters:
      - description: Order Number
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UpdateOrderStatusResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update order status for return confirmation
      tags:
      - Return Order MKP
swagger: "2.0"
