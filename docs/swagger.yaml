basePath: /api
definitions:
  api.Response:
    properties:
      message:
        type: string
      result: {}
      success:
        type: boolean
    type: object
  entity.District:
    properties:
      code:
        type: integer
      nameEN:
        type: string
      nameTH:
        type: string
      provinceCode:
        type: integer
    type: object
  entity.Province:
    properties:
      code:
        type: integer
      nameEN:
        type: string
      nameTH:
        type: string
    type: object
  entity.SubDistrict:
    properties:
      code:
        type: integer
      districtCode:
        type: integer
      nameEN:
        type: string
      nameTH:
        type: string
      zipCode:
        type: string
    type: object
  request.LoginLark:
    properties:
      userID:
        example: DC99999
        type: string
      userName:
        example: eknarin
        type: string
    type: object
  request.LoginWeb:
    properties:
      password:
        example: asdfhdskjf
        type: string
      userName:
        example: eknarin
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for Boilerplate project .
  title: Boilerplate Service
  version: "1.0"
paths:
  /auth:
    get:
      consumes:
      - application/json
      description: A test endpoint to check if the user is authenticated and to demonstrate
        Swagger documentation.
      operationId: check-authentication
      produces:
      - application/json
      responses:
        "200":
          description: Authenticated user details
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  additionalProperties: true
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Check Authentication
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Handles user login requests and generates a token for the authenticated
        user.
      operationId: user-login
      parameters:
      - description: User login credentials in JSON format
        in: body
        name: login-request
        required: true
        schema:
          $ref: '#/definitions/request.LoginWeb'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Login
      tags:
      - Auth
  /auth/login-lark:
    post:
      consumes:
      - application/json
      description: Handles user login requests and generates a token for the authenticated
        user.
      operationId: user-login-lark
      parameters:
      - description: User login from lark credentials from Lark in JSON format
        in: body
        name: Login-request-lark
        required: true
        schema:
          $ref: '#/definitions/request.LoginLark'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Lark Login
      tags:
      - Auth
  /auth/logout:
    post:
      description: Logs out the user by deleting the JWT token.
      operationId: user-logout
      responses:
        "200":
          description: Logout successful
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: User Logout
      tags:
      - Auth
  /constants/get-district:
    get:
      consumes:
      - application/json
      description: Get all Thai District.
      operationId: get-district
      produces:
      - application/json
      responses:
        "200":
          description: District
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/entity.District'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: District not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Thai District
      tags:
      - Constants
  /constants/get-province:
    get:
      consumes:
      - application/json
      description: Get all Thai Province.
      operationId: get-province
      produces:
      - application/json
      responses:
        "200":
          description: Province
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/entity.Province'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Thai Province
      tags:
      - Constants
  /constants/get-sub-district:
    get:
      consumes:
      - application/json
      description: Get all Thai SubDistrict.
      operationId: get-sub-district
      produces:
      - application/json
      responses:
        "200":
          description: SubDistrict
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/entity.SubDistrict'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: SubDistrict not found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get Thai SubDistrict
      tags:
      - Constants
swagger: "2.0"
