// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "get": {
                "description": "Validates if the JWT token is valid and retrieves user claims.",
                "tags": [
                    "Authentication"
                ],
                "summary": "Check Authentication",
                "responses": {
                    "200": {
                        "description": "Authenticated user details",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates user credentials and generates a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "login-request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginWeb"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token",
                        "schema": {
                            "$ref": "#/definitions/response.Login"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/auth/login-lark": {
            "post": {
                "description": "Authenticates user credentials from Lark and generates a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User Lark Login",
                "parameters": [
                    {
                        "description": "User login from Lark",
                        "name": "login-request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginLark"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token",
                        "schema": {
                            "$ref": "#/definitions/response.Login"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logs the user out by removing the JWT token from the cookie.",
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/draft-confirm/add-item/{orderNo}": {
            "post": {
                "description": "Adds an item to an existing draft order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Draft \u0026 Confirm MKP"
                ],
                "summary": "Add Item to Draft Order",
                "operationId": "add-item-to-draft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNo",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.AddItemResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/draft-confirm/list-codeR": {
            "get": {
                "description": "Retrieves a list of CodeR (SKU starting with 'R')",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Draft \u0026 Confirm MKP"
                ],
                "summary": "Get List of CodeR",
                "operationId": "get-list-codeR",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.ListCodeRResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/draft-confirm/order/details": {
            "get": {
                "description": "Retrieves details of an order including items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Draft \u0026 Confirm MKP"
                ],
                "summary": "Get Order Details with Items",
                "operationId": "get-order-with-items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusConfID (1 = Draft, 2 = Confirm)",
                        "name": "statusConfID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNo",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.DraftConfirmResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/draft-confirm/orders": {
            "get": {
                "description": "Retrieves all orders filtered by StatusConfID and Date Range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Draft \u0026 Confirm MKP"
                ],
                "summary": "Get Draft or Confirm Orders",
                "operationId": "get-orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusConfID (1 = Draft, 2 = Confirm)",
                        "name": "statusConfID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.OrderHeadResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/draft-confirm/remove-item/{orderNo}/{sku}": {
            "delete": {
                "description": "Removes an item from a draft order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Draft \u0026 Confirm MKP"
                ],
                "summary": "Remove Item from Draft Order",
                "operationId": "remove-item-from-draft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNo",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SKU",
                        "name": "sku",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/draft-confirm/update-status/{orderNo}": {
            "patch": {
                "description": "Updates a draft order to confirm status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Draft \u0026 Confirm MKP"
                ],
                "summary": "Confirm Draft Order",
                "operationId": "confirm-draft-order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.UpdateOrderStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/manage-users": {
            "get": {
                "description": "Retrieve user data filtered by isActive, with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get list of users",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by Active Status (true/false)",
                        "name": "isActive",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.UserResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/manage-users/add": {
            "post": {
                "description": "Add a user with role and warehouse assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Add a new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.AddUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/manage-users/delete/{userID}": {
            "delete": {
                "description": "Remove user from the system but keep data in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Delete a user (Soft Delete)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/manage-users/edit/{userID}": {
            "patch": {
                "description": "Update role and warehouse of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Edit user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.EditUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/manage-users/reset-password": {
            "post": {
                "description": "Change user password to a new value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Reset user password",
                "parameters": [
                    {
                        "description": "New password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ResetPasswordResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/manage-users/{userID}": {
            "get": {
                "description": "Retrieve details of a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/order/cancel": {
            "post": {
                "description": "Cancels an order by updating its status and recording the cancellation reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Return Order MKP"
                ],
                "summary": "Cancel an existing return order",
                "operationId": "cancel-order",
                "parameters": [
                    {
                        "description": "Cancel Order Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CancelOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CancelOrderResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/order/create": {
            "post": {
                "description": "Creates a new return order including order head and order lines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Return Order MKP"
                ],
                "summary": "Create a new return order",
                "operationId": "create-return-order",
                "parameters": [
                    {
                        "description": "Return Order Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateBeforeReturnOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.BeforeReturnOrderResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/order/mark-edited/{orderNo}": {
            "patch": {
                "description": "Marks the order as edited when there are modifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Return Order MKP"
                ],
                "summary": "Mark order as edited",
                "operationId": "mark-order-as-edited",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/order/search": {
            "get": {
                "description": "Retrieve the details of an order by its SO number or Order number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Return Order MKP"
                ],
                "summary": "Search order by SO number or Order number",
                "operationId": "search-order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SO number",
                        "name": "soNo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order number",
                        "name": "orderNo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SearchOrderResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/order/update-sr/{orderNo}": {
            "post": {
                "description": "Generates SrNo and updates it in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Return Order MKP"
                ],
                "summary": "Update SrNo (Sale Return Number)",
                "operationId": "update-sr-no",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.UpdateSrNoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/order/update-status/{orderNo}": {
            "post": {
                "description": "Updates order status based on RoleID (Accounting/Warehouse)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Return Order MKP"
                ],
                "summary": "Update order status for return confirmation",
                "operationId": "update-order-status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Number",
                        "name": "orderNo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.UpdateOrderStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "request.AddItem": {
            "type": "object",
            "properties": {
                "itemName": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "integer"
                },
                "returnQTY": {
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "request.AddUserRequest": {
            "type": "object",
            "required": [
                "roleID",
                "userID"
            ],
            "properties": {
                "roleID": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "warehouse": {
                    "type": "string"
                }
            }
        },
        "request.CancelOrder": {
            "type": "object",
            "properties": {
                "cancelReason": {
                    "type": "string"
                },
                "refID": {
                    "type": "string"
                },
                "sourceTable": {
                    "type": "string"
                }
            }
        },
        "request.CreateBeforeReturnOrder": {
            "type": "object",
            "required": [
                "channelID",
                "customerID",
                "logistic",
                "orderNo",
                "reason",
                "returnDate",
                "soNo",
                "trackingNo",
                "warehouseID"
            ],
            "properties": {
                "channelID": {
                    "type": "integer"
                },
                "customerID": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.CreateBeforeReturnOrderItem"
                    }
                },
                "logistic": {
                    "type": "string"
                },
                "mkpStatus": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "returnDate": {
                    "type": "string"
                },
                "soNo": {
                    "type": "string"
                },
                "soStatus": {
                    "type": "string"
                },
                "trackingNo": {
                    "type": "string"
                },
                "warehouseID": {
                    "type": "integer"
                }
            }
        },
        "request.CreateBeforeReturnOrderItem": {
            "type": "object",
            "required": [
                "createBy",
                "itemName",
                "orderNo",
                "price",
                "qty",
                "returnQty",
                "sku"
            ],
            "properties": {
                "alterSKU": {
                    "type": "string"
                },
                "createBy": {
                    "type": "string"
                },
                "itemName": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "integer"
                },
                "returnQty": {
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                },
                "trackingNo": {
                    "type": "string"
                }
            }
        },
        "request.EditUserRequest": {
            "type": "object",
            "required": [
                "roleID"
            ],
            "properties": {
                "oldRole": {
                    "type": "string"
                },
                "oldWarehouse": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "warehouse": {
                    "type": "string"
                }
            }
        },
        "request.LoginLark": {
            "type": "object",
            "properties": {
                "userID": {
                    "type": "string",
                    "example": "DC65060"
                },
                "userName": {
                    "type": "string",
                    "example": "eknarin.ler"
                }
            }
        },
        "request.LoginWeb": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "change password lastest in 17 January 2025",
                    "type": "string",
                    "example": "EKna1234"
                },
                "userName": {
                    "type": "string",
                    "example": "eknarin.ler"
                }
            }
        },
        "request.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "newPassword",
                "userID"
            ],
            "properties": {
                "newPassword": {
                    "type": "string",
                    "minLength": 8
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "response.AddItemResponse": {
            "type": "object",
            "properties": {
                "createBy": {
                    "type": "string"
                },
                "createDate": {
                    "type": "string"
                },
                "itemName": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "integer"
                },
                "returnQty": {
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "response.AddUserResponse": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "description": "ผู้ที่ทำการเพิ่มบัญชี",
                    "type": "string"
                },
                "roleID": {
                    "description": "รหัสบทบาทที่กำหนด",
                    "type": "integer"
                },
                "roleName": {
                    "description": "ชื่อบทบาทที่กำหนด",
                    "type": "string"
                },
                "userID": {
                    "description": "รหัสผู้ใช้ที่เพิ่ม",
                    "type": "string"
                },
                "warehouse": {
                    "description": "คลังสินค้าที่สังกัด",
                    "type": "string"
                }
            }
        },
        "response.BeforeReturnOrderItem": {
            "type": "object",
            "properties": {
                "alterSKU": {
                    "type": "string"
                },
                "createBy": {
                    "type": "string"
                },
                "createDate": {
                    "type": "string"
                },
                "itemName": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "integer"
                },
                "returnQty": {
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                },
                "trackingNo": {
                    "type": "string"
                }
            }
        },
        "response.BeforeReturnOrderResponse": {
            "type": "object",
            "properties": {
                "cancelId": {
                    "type": "integer"
                },
                "channelId": {
                    "type": "integer"
                },
                "confirmBy": {
                    "type": "string"
                },
                "confirmDate": {
                    "type": "string"
                },
                "createBy": {
                    "type": "string"
                },
                "createDate": {
                    "type": "string"
                },
                "customerId": {
                    "type": "string"
                },
                "isCNCreated": {
                    "type": "boolean"
                },
                "isEdited": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BeforeReturnOrderItem"
                    }
                },
                "logistic": {
                    "type": "string"
                },
                "mkpStatus": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "returnDate": {
                    "type": "string"
                },
                "soNo": {
                    "type": "string"
                },
                "soStatus": {
                    "type": "string"
                },
                "srNo": {
                    "type": "string"
                },
                "statusConfId": {
                    "type": "integer"
                },
                "statusReturnId": {
                    "type": "integer"
                },
                "trackingNo": {
                    "type": "string"
                },
                "updateBy": {
                    "type": "string"
                },
                "updateDate": {
                    "type": "string"
                },
                "warehouseId": {
                    "type": "integer"
                }
            }
        },
        "response.CancelOrderResponse": {
            "type": "object",
            "properties": {
                "cancelBy": {
                    "type": "string"
                },
                "cancelDate": {
                    "type": "string"
                },
                "cancelReason": {
                    "type": "string"
                },
                "refID": {
                    "type": "string"
                },
                "sourceTable": {
                    "type": "string"
                }
            }
        },
        "response.DraftConfirmItem": {
            "type": "object",
            "properties": {
                "itemName": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "response.DraftConfirmResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DraftConfirmItem"
                    }
                },
                "orderNo": {
                    "type": "string"
                },
                "soNo": {
                    "type": "string"
                },
                "srNo": {
                    "type": "string"
                }
            }
        },
        "response.EditUserResponse": {
            "type": "object",
            "properties": {
                "newRole": {
                    "description": "บทบาทใหม่หลังแก้ไข",
                    "type": "string"
                },
                "newWarehouse": {
                    "description": "คลังใหม่หลังแก้ไข",
                    "type": "string"
                },
                "oldRole": {
                    "description": "บทบาทเดิมก่อนแก้ไข",
                    "type": "string"
                },
                "oldWarehouse": {
                    "description": "คลังเดิมก่อนแก้ไข",
                    "type": "string"
                },
                "updatedBy": {
                    "description": "ผู้ที่ทำการแก้ไข",
                    "type": "string"
                },
                "userID": {
                    "description": "รหัสผู้ใช้",
                    "type": "string"
                }
            }
        },
        "response.ListCodeRResponse": {
            "type": "object",
            "properties": {
                "nameAlias": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "response.Login": {
            "type": "object",
            "properties": {
                "departmentNo": {
                    "type": "string"
                },
                "fullNameTH": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "response.OrderHeadResponse": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "integer"
                },
                "createDate": {
                    "type": "string"
                },
                "customerId": {
                    "type": "string"
                },
                "logistic": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "soNo": {
                    "type": "string"
                },
                "srNo": {
                    "type": "string"
                },
                "trackingNo": {
                    "type": "string"
                },
                "warehouseId": {
                    "type": "integer"
                }
            }
        },
        "response.ResetPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "ข้อความแจ้งเตือน",
                    "type": "string"
                },
                "updatedBy": {
                    "description": "ผู้ที่ทำการรีเซ็ตรหัสผ่าน",
                    "type": "string"
                },
                "userID": {
                    "description": "รหัสผู้ใช้ที่รีเซ็ตรหัสผ่าน",
                    "type": "string"
                }
            }
        },
        "response.SearchOrderItem": {
            "type": "object",
            "properties": {
                "itemName": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "response.SearchOrderResponse": {
            "type": "object",
            "properties": {
                "createDate": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SearchOrderItem"
                    }
                },
                "orderNo": {
                    "type": "string"
                },
                "salesStatus": {
                    "type": "string"
                },
                "soNo": {
                    "type": "string"
                },
                "statusMKP": {
                    "type": "string"
                }
            }
        },
        "response.UpdateOrderStatusResponse": {
            "type": "object",
            "properties": {
                "confirmBy": {
                    "type": "string"
                },
                "confirmDate": {
                    "type": "string"
                },
                "orderNo": {
                    "type": "string"
                },
                "statusConfID": {
                    "type": "integer"
                },
                "statusReturnID": {
                    "type": "integer"
                }
            }
        },
        "response.UpdateSrNoResponse": {
            "type": "object",
            "properties": {
                "orderNo": {
                    "type": "string"
                },
                "srNo": {
                    "type": "string"
                },
                "statusConfID": {
                    "type": "integer"
                },
                "statusReturnID": {
                    "type": "integer"
                },
                "updateBy": {
                    "type": "string"
                },
                "updateDate": {
                    "type": "string"
                }
            }
        },
        "response.UserResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "วันที่สร้างบัญชี (Optional)",
                    "type": "string"
                },
                "departmentNo": {
                    "description": "แผนกที่สังกัด",
                    "type": "string"
                },
                "description": {
                    "description": "คำอธิบายบทบาท",
                    "type": "string"
                },
                "fullNameTH": {
                    "description": "ชื่อเต็มภาษาไทย",
                    "type": "string"
                },
                "lastLoginAt": {
                    "description": "วันที่เข้าสู่ระบบล่าสุด (Optional)",
                    "type": "string"
                },
                "nickName": {
                    "description": "ชื่อเล่น",
                    "type": "string"
                },
                "permission": {
                    "description": "สิทธิ์ของผู้ใช้",
                    "type": "string"
                },
                "roleID": {
                    "description": "รหัสบทบาท",
                    "type": "integer"
                },
                "roleName": {
                    "description": "ชื่อบทบาท",
                    "type": "string"
                },
                "userID": {
                    "description": "รหัสผู้ใช้",
                    "type": "string"
                },
                "userName": {
                    "description": "ชื่อบัญชีผู้ใช้",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Return Order Management Service ⭐",
	Description:      "This is a Return Order Management Service API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
